#include <iostream>
#include <fstream>
#include <cstring>
#include <cstdlib>
#include <sstream>
#include <bits/stdc++.h>
#include <sys/time.h>
using namespace std;

struct elements
{
	int num;
	string string1;
	string string2;
	string string3;
};
struct elements one[50];

void selectionSort(struct elements two[100], int size) {
  int min_idx,step,i;
  struct elements temp;
   
  for(step = 0; step < size - 1; step++) {
    min_idx = step;
    for (i = step + 1; i < size; i++) {
      if (two[i].num < two[min_idx].num)
        min_idx = i;
    }
    
    temp = two[min_idx];
    two[min_idx] = two[step];
    two[step] = temp;
    
  }
}



int main(int argc, char** argv) {
	string myText;
	int count=0,value,i=0;
	 struct timespec start, end;
    double time_taken;
	
	ifstream MyReadFile("elements2.txt");
	if(MyReadFile == NULL)
	{
		cout << "error file not found";
		exit(1);
	}
	
	getline(MyReadFile, myText);
	stringstream geek(myText);
	int x = 0;
    geek >> x;
    one[0].num = x;


    
	
	while (getline (MyReadFile, myText)) {
  		count++;
  		if(count == 1)
  		{
  			one[i].string1 = myText;
		}
		else if(count == 2)
		{
			one[i].string2 = myText;
		}
		else if(count == 3)
		{
			one[i].string3 = myText;
		}
		else if(count == 4)
		{
			stringstream geek(myText);
			int y = 0;
    		geek >> y;
    		one[i].num = y;
			count=0;
			i++;
		}

				
}
	// xronos gia bubble sort
	clock_gettime(CLOCK_MONOTONIC, &start); 
	selectionSort(one,50);
	clock_gettime(CLOCK_MONOTONIC, &end); 
	time_taken = (end.tv_sec - start.tv_sec) * 1e9;
	time_taken = (time_taken + (end.tv_nsec - start.tv_nsec)) * 1e-9; 
	printf("xronos gia tin selection %f\n",time_taken);
		
	
	return 0;
}
